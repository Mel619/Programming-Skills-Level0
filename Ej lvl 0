""" 1. Create an online banking system with the following features:

* Users must be able to log in with a username and password.
* If the user enters the wrong credentials three times, the system must lock them out.
* The initial balance in the bank account is $2000.
* The system must allow users to deposit, withdraw, view, and transfer money.
* The system must display a menu for users to perform transactions. 

UsrPsd = {"Admin":"Admin", "Mauro":"Saliba", "Wayne":"Rooney"} 

cont = 3

InitialBalanceAdmin = 2000
InitialBalanceMel = 2000
InitialBalanceWayne = 2000

def menu ():

    print(
          "Que deseas hacer?:", 
          "1)Retirar dinero, 2)Transfeir dinero, 3)Ver balance, 4)Finalizar ")
    


while cont >= 0:

    nombre = input("Debes iniciar sesion, escribe tu usuario: ")
    contrasenia = input("Escribe tu contrasenia: ")

    if nombre in UsrPsd and UsrPsd[nombre] == contrasenia:
        print("Has iniciado sesion correctamente")
        break
    else:
        cont = cont - 1
        print("Usuario y contrasenias incorrectos, te quedan " + str(cont) + " intentos")


menu()

while True:
    opcion = input("Introduce un numero: ")

    if opcion == "1":
        print("Deseas retirar dinero ")
        retirar = input("cuanto dinero deseas retirar? ")
        if int(retirar) > InitialBalanceAdmin:
            print("no tienes suficientes fondos, tus fondos son: " + str(InitialBalanceAdmin))
        else:
            InitialBalanceAdmin = InitialBalanceAdmin - int(retirar)
            print("Tu valance queda en: " + str(InitialBalanceAdmin))
    elif opcion == "2":
        print("Deseas transferir dinero ")
        transferir = input("cuanto dinero deseas transferir? ")
        if int(transferir) > InitialBalanceAdmin:
            print("no tienes suficientes fondos, tus fondos son: " + str(InitialBalanceAdmin))
        else:
            InitialBalanceAdmin = InitialBalanceAdmin - int(transferir)
            print("Tu valance queda en: " + str(InitialBalanceAdmin))
    elif opcion == "3":
        print("tus fondos son: " + str(InitialBalanceAdmin))
    elif opcion == "4":
        break    
    else:
        print(menu()) """

""" 2. Create a currency converter between CLP, ARS, USD, EUR, TRY, GBP with the following features:
* 		The user must choose their initial currency and the currency they want to exchange to.
* 		The user can choose whether or not to withdraw their funds. If they choose not to withdraw, it should return to the main menu.
* 		If the user decides to withdraw the funds, the system will charge a 1% commission.
* 		Set a minimum and maximum amount for each currency, it can be of your choice.
* 		The system should ask the user if they want to perform another operation. If they choose to do so, it should restart the process; otherwise, the system should close. """



"""Currency = {"ARS":811.58, "USD":1, "CLP":887.89, "GDP":0.79, "EUR": 0.91, "TRY":29.75}

def menu():
    print("Monedas: CLP, ARS, USD, EUR, TRY, GBP")

    InitialCurrency = input("Elige tu moneda: ")
    ExchangeCurrency = input("Elige la moneda a la que quieres cambiar: ")
    dinero = (input("Cuanto dinero quieres convertir?: "))

    if InitialCurrency in Currency and ExchangeCurrency in Currency:
        valor1 = Currency[InitialCurrency]
        valor2 = Currency[ExchangeCurrency]
        valor3 = float(dinero) * valor2 / valor1
    else:
        print("no se encontro la moneda")
    print(valor3)
    retirar = input(f"Deseas retirar los fondos? se te cobrara un % de comision ")

    if retirar == "si":
        retiro =  1 * valor3 / 100 
        valorFinal = valor3 - retiro
        print("Usted ha retirado " + str(valorFinal) + ExchangeCurrency)
    else:
        ask = input("desea realizar otra conversion? ")
        if ask == "si":
            menu()
        else:
            print("Finalizando...")
            

menu()"""

""" 3. Create an university enrollment system with the following characteristics:
* 		The system has a login with a username and password.
* 		Upon logging in, a menu displays the available programs: Computer Science, Medicine, Marketing, and Arts.
* 		The user must input their first name, last name, and chosen program.
* 		Each program has only 5 available slots. The system will store the data of each registered user, and if it exceeds the limit, it should display a message indicating the program is unavailable.
* 		If login information is incorrect three times, the system should be locked.
* 		The user must choose a campus from three cities: London, Manchester, Liverpool.
* 		In London, there is 1 slot per program; in Manchester, there are 3 slots per program, and in Liverpool, there is 1 slot per program.
* 		If the user selects a program at a campus that has no available slots, the system should display the option to enroll in the program at another campus."""


UsrPswd = {}

print("Debes crear una cuenta ")
nombre = input("Introduce tu usuario ")
clave = input("Introduce una contrasenia ")

UsrPswd[nombre] = clave

print("Ahora debes logearte: ")

cont = 3


while cont > 0:
    usr = input("introduce tu usuario ")
    pssw = input("introduce tu contrasenia ")
    
    if usr in UsrPswd and UsrPswd[usr] == pssw:
        print("Inicio de sesion exitoso ")
        break
    elif usr in UsrPswd and UsrPswd[usr] != pssw:
        print("Contrasenia incorrecta ")
        cont = cont - 1
    else:
        print("Usuario y contrasenia incorrectos ")
        cont = cont - 1
    if cont == 0:
        quit()
    
cienciasComp = 5
medicina = 5
marketing = 5
artes = 5

london = 1
manchester = 3
liverpool = 1

print("Programas disponibles: Ciencias de la computacion, Medicina, Marketing, Artes ")


name = input("introduce tu nombre: ")
lname = input("introduce tu apellido ")
program = input("introduce el programa al que quieres aplicar: ")

""" 4. Create an online shipping system with the following features:
* 		The system has a login that locks after the third failed attempt.
* 		Display a menu that allows: Sending a package, exiting the system.
* 		To send a package, sender and recipient details are required.
* 		The system assigns a random package number to each sent package.
* 		The system calculates the shipping price. $2 per kg.
* 		The user must input the total weight of their package, and the system should display the amount to pay.
* 		The system should ask if the user wants to perform another operation. If the answer is yes, it should return to the main menu. If it's no, it should close the system."""

import random

Usrs = {}

def Shipp_price ():

    print("Ingrese el peso en KG de su paquete, se le cobrara 2$ por kg ")
    peso = input()
    for i in range(int(peso) + 1):
        i = i * 2
    print(f"El costo de envio es de: " + str(i) + " $")

def Package_number ():

    random_num = random.randint(100000, 999999)
    print("\nEl numero de paquete asignado es: " + str(random_num) )


def Create_usr ():

    name = input("Elige un nombre de usuario: ")
    psswd = input("Elige una contrasenia: ")

    Usrs[name] = psswd
    print("Usuario creado exitosamente... \n")

def Login ():

    print("Debes iniciar sesion: ")

    for i in range(3):

        usr = input("Introduce tu usuario: ")
        psw = input("Introduce tu contrasenia: ")

        if usr in Usrs and Usrs[usr] == psw:
            print("\nInicio de sesion exitoso... ")
            break
        else:
            print("Credenciales invalidas intentalo nueva mente \n")

def Menu ():
    
    print("Eliga una de las siguientes opciones 1)Enviar un paquete 2)Salir del sistema ")

    while True:
        num = input()
        if num == "1":
            print("Ahora debe proporcionar un remintente ")
            remitente = input()
            print("Ahora debe proporcionar un destinatario ")
            destinatario = input()
            print("Ahora debera calcular el precio del envio ")
            Shipp_price()
            print("Ahora se le asignara un numero de paquete ")
            Package_number()
            print("Desea hacer otra operacion? 1)Si 2)No")
            seguir = input()
            if seguir == "1":
                Menu()
            else:
                quit()
            break

        else:
            quit()
    
    
    
Create_usr()
Login()
Menu()

________________________________________________________________________________

""" 5. Develop a finance management application with the following features:
* 		The user records their total income.
* 		There are categories: Medical expenses, household expenses, leisure, savings, and education.
* 		The user can list their expenses within the categories and get the total for each category.
* 		The user can obtain the total of their expenses.
* 		If the user spends the same amount of money they earn, the system should display a message advising the user to reduce expenses in the category where they have spent the most money.
* 		If the user spends less than they earn, the system displays a congratulatory message on the screen.
* 		If the user spends more than they earn, the system will display advice to improve the user's financial health. """


total_income = input("Please enter your monthly income: ")

medical = {}
house = {}
leisure = {}
education = {}


sum_hou = 0
sum_med = None
def Medical ():

    while True:
        
        print("Do you wish to add a product? 1)Yes 2)No ")
        num = input() 
        if num == "1":
            print("Great! ")
        else:
            break

        product = input("What product or service are you buying? ")
        expense = input("How much are you paying per month? ")
        
        medical[product] = int(expense)

    answer = input("Would you like to see the list of medical supplies and see the total expenses? 1)Yes 2)No ")

    if answer == "1":
        print(medical)
        
        global sum_med
        sum_med = 0
        for i in medical.values():
            sum_med = sum_med + i
        print("The total amount of money spent on medical supplies is: " + str(sum_med) + " dolars")
        Final()
    else:
        Menu()    

def Final ():

    total_expenses = sum_med + sum_hou 

    if total_expenses == int(total_income):
        print("You should reduce some expenses... ")
        Menu()
    elif total_expenses < int(total_income):
        print("Youre doing great!!! ")
        Menu()
    else:
        print("Your expenses should be below your total income, try learning some financial concepts... ")
        Menu()
        

def Menu ():

    print("Choose one of the following categories: 1)Medical expenses, 2)Household expenses, 3)Leisure expenses, 4)Savings, 5)Education expenses ")

    num = input()

    if num == "1":
        Medical()
    elif num ==  "2":
        Household()
    elif num == "3":
        Leisure()
    elif num == "4":
        Savings()
    else:
        Education()

Menu()

